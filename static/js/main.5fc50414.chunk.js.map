{"version":3,"sources":["funcs.js","panels/RegistredPlayers.js","panels/UserPanel.js","panels/Home.js","panels/Register.js","App.js","index.js"],"names":["httpRequest","method","url","data","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","this","status","response","error","Error","statusText","code","onerror","JSON","stringify","send","RegistredPlayers","props","state","title","view","size","fetching","getPlayers","bind","onRefresh","setState","then","players","parse","connect","access_token","ids","pid","push","vk_id","join","vk_users","users","uid","user","id","photo_200","jsx","isYoureRegistred","parseInt","key","before","src","description","name","onClick","window","nickname","playersCount","Object","keys","length","playersWord","isFetching","React","Component","UserPanel","button","level","style","paddingLeft","paddingRight","sex","player","first_name","loadUser","register","confirmRegister","setPopout","actions","autoclose","action","onClose","btn","ok","isRegistred","hasOwnProperty","photo","bottomContent","fontSize","width","height","display","Home","fetchedUser","go","osName","platform","Register","success","responseText","left","data-to","IOS","App","useState","activePanel","setActivePanel","setUser","popout","useEffect","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","a","async","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"8kBAAe,SAASA,EAAaC,EAAQC,EAAKC,GAC9C,OAAO,IAAIC,SAAQ,SAASC,EAASC,GAEjC,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAKR,EAAQC,GAAK,GAEtBK,EAAIG,OAAS,WACT,GAAoB,MAAhBC,KAAKC,OACLP,EAAQM,KAAKE,cACV,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,KAAKK,YAC3BF,EAAMG,KAAON,KAAKC,OAClBN,EAAOQ,KAIfP,EAAIW,QAAU,WACVZ,EAAO,kBAGPH,GAAwB,kBAATA,IACfA,EAAOgB,KAAKC,UAAUjB,IAE1BI,EAAIc,KAAKlB,M,8LC+FFmB,E,YA1GX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,MAAO,uCACPC,KAAM,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAASC,KAAK,WACzBC,UAAU,GAGd,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAElB,EAAKC,UAAY,WACb,EAAKC,SAAS,CAAEJ,UAAU,IAC1B,EAAKC,cAZM,E,iFAiBflB,KAAKkB,e,mCAGK,IAAD,OACT7B,EAAY,OAAQ,2CACnBiC,MAAK,SAAApB,GAEF,OADA,EAAKqB,QAAUf,KAAKgB,MAAMtB,GAAUqB,QAC7BE,IAAQf,KAAK,uBAAwB,CAAC,OAAU,QAAS,MAAS,QAE5EY,MAAK,SAACpB,GACH,EAAKwB,aAAexB,EAASwB,aAE7B,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAO,EAAKL,QACjBI,EAAIE,KAAK,EAAKN,QAAQK,GAAKE,OAE/B,OAAOL,IAAQf,KAAK,wBAAyB,CACzC,OAAU,YACV,OAAU,CACN,SAAYiB,EAAII,KAAK,KACrB,OAAU,YACV,EAAK,QACL,aAAgB,EAAKL,mBAIhCJ,MAAK,SAAAU,GACF,IAAIC,EAAQD,EAAS9B,SACrB,IAAK,IAAIgC,KAAOD,EAAO,CACnB,IAAIE,EAAOF,EAAMC,GACjB,EAAKX,QAAQY,EAAKC,IAAIC,UAAYJ,EAAMC,GAAKG,UAGjD,IAAIC,EAAM,GACNC,GAAmB,EACvB,GAAI,EAAKhB,QAAS,CAAC,IAAD,WACLK,GACL,GAAIY,SAASZ,KAAS,EAAKhB,MAAMuB,KAAKC,GAGlC,OAFAG,GAAmB,SACZ,EAAKhB,QAAQK,GACpB,WAEJU,EAAIT,KAAK,kBAAC,IAAD,CACIY,IAAKb,EACLc,OAAQ,EAAKnB,QAAQK,GAAKS,UAAY,kBAAC,IAAD,CAAQM,IAAK,EAAKpB,QAAQK,GAAKS,YAAe,KACpFO,YAAa,EAAKrB,QAAQK,GAAKiB,KAC/BC,QAAS,WAAQC,OAAOjD,KAAK,oBAAoB8B,KAClD,EAAKL,QAAQK,GAAKoB,YAXlC,IAAK,IAAIpB,KAAO,EAAKL,QAAS,EAArBK,GAeb,IAAIqB,EAAeC,OAAOC,KAAK,EAAK5B,SAAS6B,OACzCC,EAAc,iCACdJ,GAAgB,GAAKA,GAAgB,EACrCI,GAAe,IACS,IAAjBJ,IACPI,GAAe,gBAEnB,EAAKhC,SAAS,CACVP,OAAQyB,EAAmB,0CAAc,IAAMU,EAAe,IAAMI,EACpEtC,KAAMuB,EACNrB,UAAU,S,+BAMlB,OACI,kBAAC,IAAD,CAAeG,UAAWpB,KAAKoB,UAAWkC,WAAYtD,KAAKa,MAAMI,UAC7D,kBAAC,IAAD,CAAOH,MAAOd,KAAKa,MAAMC,OACpBd,KAAKa,MAAME,W,GAxFDwC,IAAMC,W,qDCmHtBC,E,YAhHX,WAAY7C,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACT6C,OAAQ,kBAAC,IAAD,CAAQC,MAAM,YAAYC,MAAO,CAAEC,YAAa,GAAIC,aAAc,KAAM,kBAAC,IAAD,CAAS9C,KAAK,WAC9F+C,IAAK,EACLC,OAAQ,CACJnB,KAAM,EAAKjC,MAAMuB,KAAK8B,aAI9B,EAAKC,SAAW,EAAKA,SAAS/C,KAAd,gBAChB,EAAKgD,SAAW,EAAKA,SAAShD,KAAd,gBAChB,EAAKiD,gBAAkB,EAAKA,gBAAgBjD,KAArB,gBAbR,E,+EAiBfnB,KAAKY,MAAMyD,UAAU,kBAAC,IAAD,CACbC,QAAS,CAAC,CACNxD,MAAO,uCACPyD,WAAW,EACXX,MAAO,UACR,CACC9C,MAAO,+DACPyD,WAAW,EACXC,OAAQxE,KAAKmE,WAEjBM,QAASzE,KAAKY,MAAMyD,UAAU,OAE9B,+IACA,+W,iCAKA,IAAD,OACPrE,KAAKqB,SAAS,CACVqC,OAAQ,kBAAC,IAAD,CAAQC,MAAM,YAAYC,MAAO,CAAEC,YAAa,GAAIC,aAAc,KAAM,kBAAC,IAAD,CAAS9C,KAAK,aAElG3B,EAAY,OAAQ,iDAAkD,CAAC+C,GAAIpC,KAAKY,MAAMuB,KAAKC,KACtFd,MAAK,SAAApB,GACF,IAAIwE,GAAmC,IAA5BlE,KAAKgB,MAAMtB,GAAUyE,GAC1B,kBAAC,IAAD,CAAQhB,MAAM,aAAd,uGACA,kBAAC,IAAD,CAAQb,QAAS,EAAKsB,iBAAtB,sGACN,EAAK/C,SAAS,CAAEqC,OAAQgB,OACzB,WACC,EAAKrD,SAAS,CAAEqC,OAAQ,kBAAC,IAAD,CAAQZ,QAAS,EAAKsB,iBAAtB,6G,iCAIxB,IACJJ,EADG,OAEP3E,EAAY,MAAO,iDAAmDW,KAAKY,MAAMuB,KAAKC,IACjFd,MAAK,SAAApB,GAMF,OALA8D,EAASxD,KAAKgB,MAAMtB,GAAUqB,QAAQ,EAAKX,MAAMuB,KAAKC,IACtD,EAAKf,SAAS,CACV2C,OAAQA,EACRD,IAAKC,EAAOD,MAET1E,EAAY,MAAO,8CAE7BiC,MAAK,SAAApB,GACF,IACI0E,EADUpE,KAAKgB,MAAMtB,GAAUqB,QACTsD,eAAe,EAAKjE,MAAMuB,KAAKC,IACzD,EAAKf,SAAS,CACVqC,OAAQkB,EACF,kBAAC,IAAD,CAAQjB,MAAM,aAAd,uGACA,kBAAC,IAAD,CAAQb,QAAS,EAAKsB,iBAAtB,6G,0CAMlBpE,KAAKkE,a,+BAIL,OAAKlE,KAAKY,MAAMuB,KAIhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACE2C,MAAO9E,KAAKY,MAAMuB,KAAKE,UACvBO,YAAa5C,KAAKa,MAAMmD,OAAOnB,KAC/BkC,cAAe/E,KAAKa,MAAM6C,OAC1BhB,OAAQ,kBAAC,IAAD,CAAQC,IAAK3C,KAAKY,MAAMuB,KAAKE,UAAWrB,KAAM,KACtDA,KAAK,IACL4C,MAAO,CAACoB,SAAU,UAEI,OAAnBhF,KAAKa,MAAMkD,KAAiB/D,KAAKa,MAAMmD,OAAOhB,SAAiBhD,KAAKa,MAAMkD,IAAM,mDAAa,6CAApC,GACzD,IACA/D,KAAKa,MAAMmD,OAAOhB,SAAWhD,KAAKa,MAAMmD,OAAOhB,SAAW,sEAAiB,kBAAC,IAAD,CAAaiC,MAAO,GAAIC,OAAQ,GAAItB,MAAO,CAAEuB,QAAS,oBAd/H,S,GA/EK5B,IAAMC,WCmBf4B,EAxBF,SAAC,GAAwC,IAAtChD,EAAqC,EAArCA,GAAQiD,GAA6B,EAAjCC,GAAiC,EAA7BD,aAAahB,EAAgB,EAAhBA,UACpC,OACA,kBAAC,IAAD,CAAOjC,GAAIA,GACV,kBAAC,IAAD,oFACCiD,GAAe,kBAAC,EAAD,CAAWlD,KAAMkD,EAAahB,UAAWA,IACxDgB,GAAe,kBAAC,EAAD,CAAkBlD,KAAMkD,M,+DCDpCE,I,OAASC,eAsCAC,GApCE,SAAC7E,GACjB,IAAIhB,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQ,+CACjBF,EAAIc,KAAKF,KAAKC,UAAU,CACvB,MAASG,EAAMwB,MAEhB,IAAIsD,GAAU,EACK,MAAf9F,EAAIK,SACPyF,GAAU,IAGO,IADLlF,KAAKgB,MAAM5B,EAAI+F,cACjBhB,KACVe,GAAU,GAGX,IAAIpD,EAAMoD,EAAW,kBAAC,IAAD,6GAAsC,kBAAC,IAAD,sJAAiC,6BAAjC,6RAE3D,OACC,kBAAC,IAAD,CAAOtD,GAAIxB,EAAMwB,IAChB,kBAAC,IAAD,CACCwD,KAAM,kBAAC,IAAD,CAAc9C,QAASlC,EAAM0E,GAAIO,UAAQ,QAC7CN,KAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,KAAD,QAG1C,kBAAC,IAAD,wHAEAxD,ICGWyD,GAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVX,EAFU,KAEGc,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAehF,KAAK,WAHxC,mBAGVoF,EAHU,KAGF/B,EAHE,KAKjBgC,qBAAU,WACT5E,IAAQ6E,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMhH,EAAY,EAAZA,KACpC,GAAa,yBAATgH,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQpH,EAAKqH,OAASrH,EAAKqH,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAGxC,mBAAAQ,EAAAC,OAAA,kEAAAD,EAAA,MACoBxF,IAAQf,KAAK,wBADjC,OACOyB,EADP,OAECgE,EAAQhE,GACRkC,EAAU,MAHX,qCAKA8C,KACE,IAEH,IAAM7B,EAAK,SAAA8B,GACVlB,EAAekB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMtB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMhE,GAAG,OAAOiD,YAAaA,EAAaC,GAAIA,EAAIjB,UAAWA,IAC7D,kBAAC,GAAD,CAAUjC,GAAG,WAAWkD,GAAIA,MC7B/B7D,IAAQf,KAAK,gBAQb8G,IAASC,OAAO,kBAAC,GAAD,MAASf,SAASgB,eAAe,W","file":"static/js/main.5fc50414.chunk.js","sourcesContent":["export default function httpRequest (method, url, data) {\r\n    return new Promise(function(resolve, reject) {\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, url, true);\r\n\r\n        xhr.onload = function() {\r\n            if (this.status === 200) {\r\n                resolve(this.response);\r\n            } else {\r\n                var error = new Error(this.statusText);\r\n                error.code = this.status;\r\n                reject(error);\r\n            }\r\n        };\r\n\r\n        xhr.onerror = function() {\r\n            reject(\"Network Error\");\r\n        };\r\n\r\n        if (data && typeof data !== 'string') {\r\n            data = JSON.stringify(data);\r\n        }\r\n        xhr.send(data);\r\n    });\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\r\nimport httpRequest from '../funcs';\r\n\r\nclass RegistredPlayers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"Игроки\",\r\n            view: <Div><Spinner size='large' /></Div>,\r\n            fetching: false,\r\n        };\r\n\r\n        this.getPlayers = this.getPlayers.bind(this);\r\n\r\n        this.onRefresh = () => {\r\n            this.setState({ fetching: true });\r\n            this.getPlayers();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayers();\r\n    }\r\n\r\n    getPlayers() {\r\n        httpRequest('POST', 'https://vkapp.mailpromtrans.ru/api/game')\r\n        .then(response => {\r\n            this.players = JSON.parse(response).players;\r\n            return connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7288259, \"scope\": \"\"});\r\n        })\r\n        .then((response) => {\r\n            this.access_token = response.access_token;\r\n\r\n            let ids = [];\r\n            for (let pid in this.players) {\r\n                ids.push(this.players[pid].vk_id);\r\n            }\r\n            return connect.send(\"VKWebAppCallAPIMethod\", {\r\n                \"method\": \"users.get\",\r\n                \"params\": {\r\n                    \"user_ids\": ids.join(','),\r\n                    \"fields\": \"photo_200\",\r\n                    \"v\": \"5.103\",\r\n                    \"access_token\": this.access_token\r\n                }\r\n            });\r\n        })\r\n        .then(vk_users => {\r\n            let users = vk_users.response;\r\n            for (let uid in users) {\r\n                let user = users[uid];\r\n                this.players[user.id].photo_200 = users[uid].photo_200;\r\n            }\r\n\r\n            let jsx = [];\r\n            let isYoureRegistred = false;\r\n            if (this.players) {\r\n                for (let pid in this.players) {\r\n                    if (parseInt(pid) === this.props.user.id) {\r\n                        isYoureRegistred = true;\r\n                        delete this.players[pid];\r\n                        continue;\r\n                    }\r\n                    jsx.push(<Cell\r\n                                 key={pid}\r\n                                 before={this.players[pid].photo_200 ? <Avatar src={this.players[pid].photo_200}/> : null}\r\n                                 description={this.players[pid].name}\r\n                                 onClick={() => { window.open(\"https://vk.com/id\"+pid) }}\r\n                             >{ this.players[pid].nickname }</Cell>);\r\n                }\r\n            }\r\n\r\n            let playersCount = Object.keys(this.players).length;\r\n            let playersWord = 'игрок';\r\n            if (playersCount <= 4 && playersCount >= 2 ) {\r\n                playersWord += 'a';\r\n            } else if (playersCount !== 1) {\r\n                playersWord += 'ов';\r\n            }\r\n            this.setState({\r\n                title: (isYoureRegistred ? 'Вы и ещё ' : '') + playersCount + ' ' + playersWord,\r\n                view: jsx,\r\n                fetching: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PullToRefresh onRefresh={this.onRefresh} isFetching={this.state.fetching}>\r\n                <Group title={this.state.title}>\r\n                    {this.state.view}\r\n                </Group>\r\n            </PullToRefresh>\r\n        );\r\n    }\r\n}\r\n\r\nRegistredPlayers.propTypes = {\r\n\tuser: PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default RegistredPlayers;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell'\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\r\nimport Icon24Write from '@vkontakte/icons/dist/24/write';\r\n\r\nimport httpRequest from '../funcs';\r\n\r\nclass UserPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            button: <Button level=\"secondary\" style={{ paddingLeft: 25, paddingRight: 25 }}><Spinner size=\"small\" /></Button>,\r\n            sex: 1,\r\n            player: {\r\n                name: this.props.user.first_name,\r\n            },\r\n        };\r\n\r\n        this.loadUser = this.loadUser.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.confirmRegister = this.confirmRegister.bind(this);\r\n    }\r\n\r\n    confirmRegister() {\r\n        this.props.setPopout(<Alert\r\n                actions={[{\r\n                    title: 'Отмена',\r\n                    autoclose: true,\r\n                    style: 'cancel'\r\n                }, {\r\n                    title: 'Записаться',\r\n                    autoclose: true,\r\n                    action: this.register,\r\n                }]}\r\n                onClose={this.props.setPopout(null)}\r\n            >\r\n                <h2>Вы хотите записаться?</h2>\r\n                <p>Отменить запись можно будет только через сообщения сообщества.</p>\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    register() {\r\n        this.setState({\r\n            button: <Button level=\"secondary\" style={{ paddingLeft: 25, paddingRight: 25 }}><Spinner size=\"small\" /></Button>\r\n        });\r\n        httpRequest('POST', 'https://vkapp.mailpromtrans.ru/widget/register', {id: this.props.user.id})\r\n            .then(response => {\r\n                let btn = (JSON.parse(response).ok === true)\r\n                    ? <Button level=\"secondary\">Вы записаны на игру</Button>\r\n                    : <Button onClick={this.confirmRegister}>Записаться на игру</Button>\r\n                this.setState({ button: btn });\r\n            }, () => {\r\n                this.setState({ button: <Button onClick={this.confirmRegister}>Записаться на игру</Button> });\r\n            });\r\n    }\r\n\r\n    loadUser() {\r\n        let player;\r\n        httpRequest('GET', 'https://vkapp.mailpromtrans.ru/api/players?id=' + this.props.user.id)\r\n            .then(response => {\r\n                player = JSON.parse(response).players[this.props.user.id];\r\n                this.setState({\r\n                    player: player,\r\n                    sex: player.sex\r\n                });\r\n                return httpRequest('GET', 'https://vkapp.mailpromtrans.ru/api/game');\r\n            })\r\n            .then(response => {\r\n                let players = JSON.parse(response).players;\r\n                let isRegistred = players.hasOwnProperty(this.props.user.id);\r\n                this.setState({\r\n                    button: isRegistred\r\n                        ? <Button level=\"secondary\">Вы записаны на игру</Button>\r\n                        : <Button onClick={this.confirmRegister}>Записаться на игру</Button>\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.user)\r\n            return null;\r\n\r\n        return (\r\n        <Group>\r\n            <Cell\r\n              photo={this.props.user.photo_200}\r\n              description={this.state.player.name}\r\n              bottomContent={this.state.button}\r\n              before={<Avatar src={this.props.user.photo_200} size={80}/>}\r\n              size=\"l\"\r\n              style={{fontSize: '1.2em'}}\r\n            >\r\n                {this.state.sex === null || !this.state.player.nickname ? '' : (this.state.sex ? 'Господин' : 'Госпожа')}\r\n                {' '}\r\n                {this.state.player.nickname ? this.state.player.nickname : 'Изменить ник' + <Icon24Write width={12} height={12} style={{ display: 'inline-block' }} />}\r\n            </Cell>\r\n        </Group>\r\n        );\r\n    }\r\n}\r\n\r\nUserPanel.propTypes = {\r\n\tuser: PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n    }),\r\n    setPopout: PropTypes.func,\r\n};\r\n\r\nexport default UserPanel;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n\nimport RegistredPlayers from './RegistredPlayers';\nimport UserPanel from './UserPanel';\n\nconst Home = ({ id, go, fetchedUser, setPopout }) => {\n\treturn (\n\t<Panel id={id}>\n\t\t<PanelHeader>Мафия | Елабуга</PanelHeader>\n\t\t{fetchedUser && <UserPanel user={fetchedUser} setPopout={setPopout} />}\n\t\t{fetchedUser && <RegistredPlayers user={fetchedUser} />}\n\t</Panel>\n\t);\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tid: PropTypes.number,\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport './Register.css';\n\nconst osName = platform();\n\nconst Register = (props) => {\n\tlet xhr = new XMLHttpRequest();\n\txhr.open('POST', 'https://vkapp.mailpromtrans.ru/api/register');\n\txhr.send(JSON.stringify({\n\t\t'vk_id': props.id\n\t}));\n\tlet success = true;\n\tif (xhr.status !== 200) {\n\t\tsuccess = false;\n\t}\n\tlet result = JSON.parse(xhr.responseText);\n\tif (result.ok === false) {\n\t\tsuccess = false;\n\t}\n\n\tlet jsx = success ? (<View>Вы записаны на игру!</View>) : (<View>Не удалось записать на игру<br />Попробуйте записаться через личные сообщения группы</View>);\n\n\treturn (\n\t\t<Panel id={props.id}>\n\t\t\t<PanelHeader\n\t\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t</HeaderButton>}\n\t\t\t>\n\t\t\t\t<PanelHeader>Регистрация на Мафию</PanelHeader>\n\t\t\t</PanelHeader>\n\t\t\t{jsx}\n\t\t</Panel>\n\t);\n};\n\nRegister.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Register;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './funcs';\n\nimport Home from './panels/Home';\nimport Register from './panels/Register';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} setPopout={setPopout} />\n\t\t\t<Register id='register' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}